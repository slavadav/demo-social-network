{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","authReducer","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","src","icon","alt","name","Message","message","Dialogs","userElements","dialogsPage","users","map","user","key","messageElements","messages","onChange","e","messageElement","target","value","updateMessage","messageText","placeholder","onClick","addMessage","compose","dialogsReducer","dispatch","addMessageActionCreator","updateMessageActionCreator"],"mappings":"sNAIMA,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,YAAYD,SAGjBE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAyBL,K,qFCHrBM,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACQ,kBAAC,IAAD,CAASL,GAAII,EAAME,UAAU,gEACzB,yBAAKC,IAAKC,IAAMF,UAAU,YAAYG,IAAI,QAC1C,0BAAMH,UAAU,kBAAkBP,EAAMW,QCJzCC,EAHC,SAACZ,GACb,OAAO,yBAAKO,UAAU,YAAYP,EAAMa,UCuC7BC,EAtCC,SAACd,GACb,IAAMe,EAAef,EAAMgB,YAAYC,MAAMC,KAAK,SAAAC,GAAI,OACjD,kBAAC,EAAD,CAAYR,KAAMQ,EAAKR,KAAML,GAAIa,EAAKb,GAAIc,IAAKD,EAAKb,QACnDe,EAAkBrB,EAAMgB,YAAYM,SAASJ,KAAK,SAAAL,GAAO,OAC1D,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASO,IAAKP,EAAQP,QAWrD,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,oBACTQ,GAEN,yBAAKR,UAAU,SACX,0BAAMA,UAAU,cACZ,2BACIgB,SAbK,SAACC,GACtB,IAAMC,EAAiBD,EAAEE,OAAOC,MAChC3B,EAAM4B,cAAcH,IAYJE,MAAO3B,EAAMgB,YAAYa,YACzBC,YAAY,cACZvB,UAAU,sBACd,4BAAQwB,QArBL,WACf/B,EAAMgC,cAqBczB,UAAU,oCADlB,SAKFc,K,gCCbHY,sBACX9B,aAlBoB,SAACV,GACrB,MAAO,CACHuB,YAAavB,EAAMyC,mBAIA,SAACC,GACxB,MAAO,CACHH,WAAY,WACRG,EAASC,gBAEbR,cAAe,SAACC,GACZM,EAASE,YAA2BR,SAO5CjC,IAFWqC,CAGbnB","file":"static/js/3.1d411951.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {            \r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport icon from '../../../assets/images/icon.png'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return ( \r\n            <NavLink to={path} className=\"list-group-item list-group-item-light list-group-item-action\">\r\n                <img src={icon} className=\"user-icon\" alt=\"...\" />\r\n                <span className=\"text-dark pl-2\">{props.name}</span>\r\n            </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\n\r\nconst Message = (props) => {\r\n    return <div className=\"p-1 pl-3\">{props.message}</div>\r\n}\r\nexport default Message","import React from 'react'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\n\r\nconst Dialogs = (props) => {\r\n    const userElements = props.dialogsPage.users.map( user => \r\n        (<DialogItem name={user.name} id={user.id} key={user.id}/>))\r\n    const messageElements = props.dialogsPage.messages.map( message => \r\n        (<Message message={message.message} key={message.id} />))\r\n\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    const updateNewMessage = (e) => {\r\n        const messageElement = e.target.value\r\n        props.updateMessage(messageElement)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"list-group col-3\">\r\n                { userElements }\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <form className=\"form-group\">\r\n                    <input \r\n                        onChange={updateNewMessage}\r\n                        value={props.dialogsPage.messageText}\r\n                        placeholder='New message'\r\n                        className=\"form-control my-2\" />\r\n                    <button onClick={addMessage}\r\n                            className=\"btn btn-sm btn-primary ml-3 mb-3\">\r\n                        Send\r\n                    </button>\r\n                </form>\r\n                { messageElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs'\r\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        updateMessage: (messageText) => {\r\n            dispatch(updateMessageActionCreator(messageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}