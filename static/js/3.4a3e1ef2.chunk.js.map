{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","authReducer","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","useState","status","setStatus","editMode","setEditMode","useEffect","type","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","className","s","content","discription","src","photos","small","icon","alt","fullName","userId","Preloader","Post","key","id","item","post","likes","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPosts","memo","postElements","profilePage","posts","map","likesCount","style","newPostFormData","addPost","newPost","MyPostsContainer","profileReducer","dispatch","addPostActionCreator","Profile","ProfileContainer","match","params","authUserId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.4a3e1ef2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {            \r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discription\":\"ProfileInfo_discription__1ygpZ\",\"headerImage\":\"ProfileInfo_headerImage__2WzK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2aKAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Jby2\"};","import React, {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatus = (props) =>  {\r\n    \r\n    let [status, setStatus] = useState(props.status)\r\n    let [editMode, setEditMode] = useState(false) //Destructuring assignment\r\n    //const editMode = stateWithUseState[0]\r\n    //const setEditMode = stateWithUseState[1]\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            {editMode ? \r\n            <div>\r\n                <input type=\"text\" autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}/>\r\n            </div> : \r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>                    \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus\r\n\r\n\r\n/* class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode() {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    \r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                {this.state.editMode || !this.props.status ? \r\n                <div>\r\n                    <input type=\"text\" autoFocus={true}\r\n                        onBlur={this.deactivateEditMode.bind(this)}\r\n                        onChange={this.onStatusChange}\r\n                        value={this.state.status}/>\r\n                </div> : \r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode.bind(this)}>{this.props.status}</span>                    \r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus */","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n//import headerImage from '../../../assets/images/header_image.png'\r\nimport icon from '../../../assets/images/icon.png'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            {/* <div>\r\n                <img src={headerImage}  alt=\"\" className={s.headerImage}/>\r\n            </div> */}\r\n            <div className={s.discription}>\r\n                <img src={profile.photos.small ? profile.photos.small : icon} alt=\"\" />\r\n                <div>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <ProfileStatus userId={profile.userId} \r\n                                   status={status}\r\n                                   updateStatus={updateStatus} />\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div key={props.id} className={s.item}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS2ktlwSh8RQGskNFUfNSyfHZYLe-Duiu8BgQMb3JEw9uLV7KpbmA&s'  alt='some value'/>\r\n            {props.post} \r\n            <span> {props.likes} likes</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport style from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators'\r\n//import { myPosts } from '../../redux/auth-reducer'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter new post\"} \r\n                component={Textarea} name={\"newPost\"}\r\n                validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n} \r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPost'})(NewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    const postElements = props.profilePage.posts\r\n                        .map(item => (<Post post={item.post} likes={item.likesCount} key={item.id} />))\r\n\r\n    const onFormSubmit = (newPostFormData) => {\r\n        props.addPost(newPostFormData.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <h4>My posts</h4>\r\n            <NewPostReduxForm onSubmit={onFormSubmit} />\r\n            { postElements }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts\r\n\r\n\r\n/* class MyPosts extends React.PureComponent { //autocall shouldComponentUpdate\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state\r\n    // }\r\n\r\n    render() {\r\n        const postElements = this.props.profilePage.posts\r\n                            .map(item => (<Post post={item.post} likes={item.likesCount} key={item.id} />))\r\n\r\n        const onFormSubmit = (newPostFormData) => {\r\n            this.props.addPost(newPostFormData.newPost)\r\n        }\r\n\r\n        return (\r\n            <div className={style.item}>\r\n                <h4>My posts</h4>\r\n                <NewPostReduxForm onSubmit={onFormSubmit} />\r\n                { postElements }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MyPosts */\r\n\r\n/* const MyPosts = (props) => {\r\n    const postElements = props.profilePage.posts.map(item => (<Post post={item.post} likes={item.likesCount} key={item.id} />))\r\n\r\n    const newPostElement = React.createRef()\r\n\r\n    const addPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        const text = newPostElement.current.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={style.item}>\r\n            <h4>My posts</h4>\r\n            <div>\r\n                <textarea onChange={onPostChange} \r\n                          ref={newPostElement} \r\n                          value={props.profilePage.newPostText} \r\n                          placeholder='New post'/>\r\n                <button onClick={addPost}>Send</button>\r\n            </div>\r\n            { postElements }\r\n        </div>\r\n    )\r\n} */","import MyPosts from './MyPosts'\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profileReducer\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostFormData) => {\r\n            dispatch(addPostActionCreator(newPostFormData))\r\n        },\r\n        /* updateNewPostText: (text) => {\r\n            dispatch(updateNewPostActionCreator(text))\r\n        } */\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n\r\n\r\n\r\n\r\n/* const MyPostsContainer = () => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n        {\r\n            store => {\r\n                let state = store.getState()\r\n\r\n                const addPost = () => {\r\n                    store.dispatch(addPostActionCreator())\r\n                }\r\n            \r\n                const onPostChange = (text) => {\r\n                    const action = updateNewPostActionCreator(text)\r\n                    store.dispatch(action)\r\n                }\r\n\r\n                return <MyPosts updateNewPostText={onPostChange}\r\n                        addPost={addPost}\r\n                        profilePage={state.profilePage}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                        updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport s from './Profile.module.css'\r\nimport Profile from './Profile'\r\nimport { getProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount () {\r\n        let userId = this.props.match.params.userId\r\n        \r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login') \r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.content}>\r\n                <Profile { ...this.props } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profileReducer.profile,\r\n        status: state.profileReducer.status,\r\n        authUserId: state.authReducer.id,\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n    )(ProfileContainer)"],"sourceRoot":""}