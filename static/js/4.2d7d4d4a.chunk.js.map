{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","authReducer","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","src","alt","activeClassName","activeLink","name","Message","message","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","userElements","dialogsPage","users","map","user","key","messageElements","messages","dialogs","dialogItems","newMessageText","addMessage","newMessage","compose","dialogsReducer","dispatch","addMessageActionCreator"],"mappings":"sNAIMA,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,YAAYD,SAGjBE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAyBL,K,oBChBpCM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,4B,uGCatKC,EAVI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAI,+GAAgHC,IAAI,eAC7H,kBAAC,IAAD,CAASZ,GAAIM,EAAMO,gBAAiBJ,IAAEK,YAAaf,EAAMgB,QCHtDC,EAHC,SAACjB,GACb,OAAO,yBAAKS,UAAWC,IAAEQ,SAAUlB,EAAMkB,UCWvCC,EAAsBC,YAAU,CAACC,KAAM,cAAjBD,EATL,SAACpB,GACpB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAU,WAAWT,KAAK,aAAaU,YAAY,sBAC1D,4CA4BGC,EArBC,SAAC3B,GACb,IAAM4B,EAAe5B,EAAM6B,YAAYC,MAAMC,KAAK,SAAAC,GAAI,OAAK,kBAAC,EAAD,CAAYhB,KAAMgB,EAAKhB,KAAMR,GAAIwB,EAAKxB,GAAIyB,IAAKD,EAAKxB,QACzG0B,EAAkBlC,EAAM6B,YAAYM,SAASJ,KAAK,SAAAb,GAAO,OAAK,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASe,IAAKf,EAAQV,QAMpH,OACI,yBAAKC,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAE2B,aACZT,GAEN,yBAAKnB,UAAWC,IAAEyB,UACZD,EACF,kBAACf,EAAD,CAAqBG,SAXX,SAACgB,GACnBtC,EAAMuC,WAAWD,EAAeE,kB,gCCCzBC,sBACXtC,aAlBoB,SAACV,GACrB,MAAO,CACHoC,YAAapC,EAAMiD,mBAIA,SAACC,GACxB,MAAO,CACHJ,WAAY,SAACD,GACTK,EAASC,YAAwBN,SAUzC1C,IAFW6C,CAGbd","file":"static/js/4.2d7d4d4a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {            \r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__35T6y\",\"dialogItems\":\"Dialogs_dialogItems__28AiB\",\"dialog\":\"Dialogs_dialog__2WnBA\",\"activeLink\":\"Dialogs_activeLink__FZAuq\",\"messages\":\"Dialogs_messages__3q8ul\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS2ktlwSh8RQGskNFUfNSyfHZYLe-Duiu8BgQMb3JEw9uLV7KpbmA&s'  alt='some value'/>\r\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\nexport default Message","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\n\r\nconst NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component='textarea' name='newMessage' placeholder='Enter new message' />\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const userElements = props.dialogsPage.users.map( user => (<DialogItem name={user.name} id={user.id} key={user.id}/>))\r\n    const messageElements = props.dialogsPage.messages.map( message => (<Message message={message.message} key={message.id} />))\r\n\r\n    const addNewMessage = (newMessageText) => {\r\n        props.addMessage(newMessageText.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                { userElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messageElements }\r\n                <NewMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n/* \r\nconst Dialogs = (props) => {\r\n    const userElements = props.dialogsPage.users.map( user => (<DialogItem name={user.name} id={user.id} key={user.id}/>))\r\n    const messageElements = props.dialogsPage.messages.map( message => (<Message message={message.message} key={message.id} />))\r\n\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    const updateNewMessage = (e) => {\r\n        const newMessageElement = e.target.value\r\n        props.updateNewMessage(newMessageElement)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                { userElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messageElements }\r\n                <div>\r\n                    <textarea \r\n                        onChange={updateNewMessage} \r\n                        value={props.dialogsPage.newMessageText}\r\n                        placeholder='New message' />\r\n                    <button onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} */","import Dialogs from './Dialogs'\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        },\r\n        /* updateNewMessage: (newMessageElement) => {\r\n            dispatch(updateMessageActionCreator(newMessageElement))\r\n        } */\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n/* const DialogsContainer = () => {\r\n    return (\r\n    <StoreContext.Consumer>\r\n        { store => {\r\n            const state = store.getState()\r\n            const addMessage = () => {\r\n                store.dispatch(addMessageActionCreator())\r\n            }\r\n\r\n            const updateNewMessage = (newMessageElement) => {\r\n                store.dispatch(updateMessageActionCreator(newMessageElement))\r\n            }\r\n    \r\n            return <Dialogs dialogsPage={state.dialogsPage}\r\n                    updateNewMessage={updateNewMessage}\r\n                    addMessage={addMessage}/>\r\n            }\r\n        }\r\n    </StoreContext.Consumer>\r\n    )\r\n} */"],"sourceRoot":""}